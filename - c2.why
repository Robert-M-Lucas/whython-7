struct Node {
    cur: int,
    last: bool,
    next: $Node
}

struct LL {
    base: $Node
}

impl LL {
    fn add(self, next: int) {
        last = false;
        let curr: $Node = self.base
        while (!last) {

        };
    }
}

fn main() ~ int {
    let a: int = 4;
    let b: $int = ^a;

    printi(*b);

    *b += 1;

    printi(a);
    printi(*b);

    return 7;
}